
#user  nobody;
worker_processes  1;

# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;

# pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  tabelasus.com.br www.tabelasus.com.br;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # Rota de validação de servidor e atualização de certificado SSL
        # location /.well-known/acme-challenge/ {
        #     root /var/www/certbot;
        # }

        return 301 https://$host$request_uri;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # HTTPS server
    server {
        listen       443 ssl;
        server_name  tabelasus.com.br www.tabelasus.com.br;

        root         /etc/nginx/html;
        index        index.html;

        ssl_certificate /etc/letsencrypt/live/tabelasus.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tabelasus.com.br/privkey.pem;

        # ssl_session_cache    shared:SSL:1m;
        # ssl_session_timeout  5m;

        # ssl_ciphers  HIGH:!aNULL:!MD5;
        # ssl_prefer_server_ciphers  on;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            rewrite /api/(.*) /$1  break;
            proxy_pass         http://backend:3000;
            proxy_redirect     off;
            proxy_set_header   Host $host;
        }
    }
}
